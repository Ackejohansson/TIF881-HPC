Assembler
O3 doesent do anything, hence faster
ASM can be very different

____________________________________________________________________________
Valgrind and GDB
1. OK. 2 heap alloc 2 free
2. NOK. Segmentation fault.
3. Runs with memoryleak! Memory in use after exit
4. Runs but aborts. Invalid free.

____________________________________________________________________________
GDB
Use when "Segmentation fault"
Points to 0x0 (null)

____________________________________________________________________________
Inlining 
```
gcc -O2 -march=native -o samef same_file.c
hyperfine -w 10 -N --runs 200000 ./FILENAME
```

Hard to see difference
Different file -> more overhead -> slower

Use Static inline to inline, gains speed at cost of memory
____________________________________________________________________________
Locality  - 10000 runs
O0
row_sums               2.5872984 ms
col_sums               3.1777095 ms
col_sums_improved took 2.8010547 ms

O2
row_sums took          1.0902622 ms
col_sums took          1.4616230 ms
col_sums_improved took 0.3291039 ms

Row major faster
Some sort of parralelisation happening in O2? Big diff for improved
____________________________________________________________________________
Data_dependency
Faster with loop unrolling. 

